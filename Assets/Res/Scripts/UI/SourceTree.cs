//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.ChivaConfigurationVRPatform
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class SourceTreeData : QFramework.UIPanelData
    {
        public List<TreeNode> treeNodes = new List<TreeNode>();

    }
    
    public partial class SourceTree : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as SourceTreeData ?? new SourceTreeData();
            
            AddMainNodeBtn.onClick.AddListener(AddMianNodeBtnClick);

            FinishBtn.onClick.AddListener(()=> 
            {

                for (int i = 0; i < mData.treeNodes.Count; i++)
                {
                    Debug.LogError(mData.treeNodes[i] == null);
                }


            });

        }

        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }

        /// <summary>
        /// 添加Node
        /// </summary>
        protected void AddMianNodeBtnClick()
        {
            //克隆子节点
            GameObject tempNodeObj = Instantiate(TreeNode.gameObject,Content);
            TreeNode tempNode = tempNodeObj.GetComponent<TreeNode>();

            tempNode.treeNodeItem.cloneConent = Content;
            tempNode.treeNodeItem.prefab = TreeNode.gameObject;
            tempNode.treeNodeItem.layer.Value = 0;
            mData.treeNodes.Add(tempNode);

            tempNodeObj.SetActive(true);

        }

        protected void GenerateNodeTree()
        {



        }
    }
}
